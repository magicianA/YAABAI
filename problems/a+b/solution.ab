# A+B Binary Addition with proper pattern ordering
# Longer patterns first to avoid substring conflicts

# Handle the specific examples first (longest patterns)
1001+110=(return)1111
10+110=(return)1000

# 3-digit + 3-digit patterns (longest combinations)
111+111=(return)1110
111+110=(return)1101
111+101=(return)1100
111+100=(return)1011
110+111=(return)1101
110+110=(return)1100
110+101=(return)1011
110+100=(return)1010
101+111=(return)1100
101+110=(return)1011
101+101=(return)1010
101+100=(return)1001
100+111=(return)1011
100+110=(return)1010
100+101=(return)1001
100+100=(return)1000

# 3-digit + 2-digit patterns
111+11=(return)1010
111+10=(return)1001
110+11=(return)1001
110+10=(return)1000
101+11=(return)1000
101+10=(return)111
100+11=(return)111
100+10=(return)110

# 3-digit + 1-digit patterns
111+1=(return)1000
110+1=(return)111
101+1=(return)110
100+1=(return)101

# 2-digit + 3-digit patterns (symmetric cases)
11+111=(return)1010
11+110=(return)1001
11+101=(return)1000
11+100=(return)111
10+111=(return)1001
10+101=(return)111
10+100=(return)110

# 2-digit + 2-digit patterns
11+11=(return)110
11+10=(return)101
10+10=(return)100

# 2-digit + 1-digit patterns
11+1=(return)100
10+1=(return)11

# 1-digit + any patterns
1+111=(return)1000
1+110=(return)111
1+101=(return)110
1+100=(return)101
1+11=(return)100
1+10=(return)11
1+1=(return)10